{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/currency/api.service.ts","webpack:///./src/app/currency/currency.component.css","webpack:///./src/app/currency/currency.component.html","webpack:///./src/app/currency/currency.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/todos/todos.component.css","webpack:///./src/app/todos/todos.component.html","webpack:///./src/app/todos/todos.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TodosComponent } from './todos/todos.component';\nimport { EditComponent } from './edit/edit.component';\nimport { CurrencyComponent } from './currency/currency.component';\n\nconst routes: Routes = [{ path: 'login', component: LoginComponent },\n{ path: 'home', component: HomeComponent },\n{ path: 'register', component: RegisterComponent },\n{ path: 'todos', component: TodosComponent },\n{ path: 'currency', component: CurrencyComponent },\n{ path: 'edit/:index', component: EditComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menu></app-menu>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'apptodo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TodosComponent } from './todos/todos.component';\nimport { EditComponent } from './edit/edit.component';\nimport { CurrencyComponent } from './currency/currency.component';\n\nimport { Observable } from 'rxjs';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { environment, } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MenuComponent,\n    RegisterComponent,\n    HomeComponent,\n    TodosComponent,\n    EditComponent,\n    CurrencyComponent,\n    // AngularFireModule.initializeApp(environment.firebaseConfig),\n    // AngularFireDatabaseModule\n\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  connectedUser;\n  message;\n  todos;\n  id;\n\n  constructor(private router: Router, private http: HttpClient) {\n    if (localStorage.getItem('connectedUser')) {\n\n      this.connectedUser = JSON.parse(localStorage.getItem('connectedUser'))\n    }\n  }\n  login(loginForm) {\n    this.message = '';\n    const usersStr = localStorage.getItem('users');\n    const users = <any[]>JSON.parse(usersStr);\n    console.log(users);\n\n\n\n    const valid = users.find((elem) => elem.email === loginForm.value.email && elem.pwd === loginForm.value.pwd);\n    if (valid) {\n      this.message = 'ok';\n      console.log('success');\n      const connectedUser = users.filter((elem) => elem.email === loginForm.value.email && elem.pwd === loginForm.value.pwd)[0];\n      localStorage.setItem('connectedUser', JSON.stringify(connectedUser));\n      console.log('connected user ', connectedUser);\n      this.connectedUser = connectedUser;\n      this.router.navigateByUrl('/todos');\n    } else {\n      this.message = 'please verify your login';\n      console.log('failed');\n    }\n\n  }\n  register(form) {\n    console.log(form);\n    const users = localStorage.getItem('users');\n    if (!users) {\n      const usersArray = [];\n      usersArray.push(form.value);\n      localStorage.setItem('users', JSON.stringify(usersArray));\n      console.log(form);\n    } else {\n      const usersJSON = JSON.parse(users);\n      console.log(users);\n\n      for (let i = 0; i < usersJSON.length; i++) {\n        const element: any = usersJSON[i];\n\n        if (form.value.email === element.email) {\n          this.router.navigateByUrl('/login');\n          console.log('user exist');\n        } else {\n          usersJSON.push(form.value);\n          localStorage.setItem('users', JSON.stringify(usersJSON));\n        }\n      }\n\n    }\n  }\n\n  getValue(todosForm) {\n\n\n    if (todosForm.value.input_value !== '') {\n      const todoArray = [];\n      const todo = { title: todosForm.value.input_value, date: Date.now(), Done: false };\n\n      this.todos.push(todo);\n      // localStorage.setItem('todos', JSON.stringify(todo));\n\n      return this.http.post('http://chehir.tn:3000/ranim/user', this.todos)\n    }\n  }\n  isAuth() {\n\n    return JSON.parse(localStorage.getItem('connectedUser'));\n    return this.http.get('http://chehir.tn:3000/ranim/login/id')\n  }\n  getTodo() {\n\n    return JSON.parse(localStorage.getItem('todos'));\n\n  }\n\n  updateUser(user, id) {\n    return this.http.post('http://chehir.tn:3000/ranim/update/' + id, user)\n  }\n  getUser(id) {\n    return this.http.get('http://chehir.tn:3000/ranim/user/' + id)\n  }\n  checkLogin(user) {\n\n    return this.http.post('http://chehir.tn:3000/ranim/login', user)\n\n    // this.router.navigateByUrl('/todos');\n  }\n  registerUser(user) {\n\n    // const usersArray = [];\n    // usersArray.push(user);\n    // console.log(usersArray)\n    return this.http.post('http://chehir.tn:3000/ranim/register', user)\n  }\ngetById(id){\n  return this.http.get('http://chehir.tn:3000/ranim/user/' + id)\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getData(): Observable<any> {\n    return this.http.get('http://chehir.tn:3000/currencies');\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1cnJlbmN5L2N1cnJlbmN5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row py-md-5 mx-auto\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n      <select class=\\\"form-control\\\" (change)=\\\"selected($event)\\\">\\n        <option *ngFor=\\\"let c of currencies; let i = index\\\" [value]=\\\"i\\\">{{c.index}}-{{c.Code}}</option>\\n      </select>\\n    </div>\\n  </div>\\n  <div class=\\\"row py-md-5\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"todolist not-done\\\">\\n        <h5>currencies</h5>\\n        <table class=\\\"table table-striped custab\\\" >\\n          <thead>\\n            <tr>\\n              <th>language</th>\\n              <th>name</th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\" let name of names\\\">\\n            <td>{{name.language}}</td>\\n            <td>{{name.name}}</td>\\n          </tr>\\n        </table>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"todolist not-done\\\">\\n        <h5>countries</h5>\\n        <table class=\\\"table table-striped custab\\\">\\n          <thead>\\n            <tr>\\n              <th>language</th>\\n              <th>name</th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let country of countries\\\">\\n            <td>{{country.lang}}</td>\\n            <td>{{country.value}}</td>\\n           </tr>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { Observable } from 'rxjs/Observable';\n@Component({\n  selector: 'app-currency',\n  templateUrl: './currency.component.html',\n  styleUrls: ['./currency.component.css']\n})\nexport class CurrencyComponent implements OnInit {\n\n  currency: Observable<currency[]>;\n  currencies = [];\n  countries = [];\n  names=[];\n  index;\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n\n    this.apiService.getData().subscribe(data => {\n      console.log(data)\n      this.currencies = data;\n\n\n\n\n\n    });\n\n\n\n  }\n\n  selected(event) {\n    let index = event.target.value;\n\n    console.log(index)\n    let countries = this.currencies[index].Countries[0];\n   \n    this.countries = Object.keys(countries).map(elem => ({\n      'lang': elem, 'value': countries[elem]\n    }));\n    console.log(index)\n    let names = this.currencies[index].Name;\n    console.log(names)\n    this.names = Object.keys(names).map(elem => ({\n      'language': elem, 'name': names[elem]\n    }));\nconsole.log(this.names)\n  }\n\n}\nexport class currency {\n  code: String;\n  name: Object;\n  constructor(code: string, name: object) {\n    this.name = name;\n    this.code = code;\n  }\n}\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<link href=\\\"assets/bootsrap/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\">\\n<script src=\\\"assets/bootsrap/bootstrap.min.js\\\"></script>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row centered-form\\\">\\n    <div class=\\\"col-xs-12 col-sm-8 col-md-4 col-sm-offset-2 col-md-offset-4\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">todo Form </h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n\\n          <form [formGroup]=\\\"editForm\\\" (ngSubmit)=getToDo(editForm)>\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" formControlName=\\\"input_value\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Enter your email\\\"><input\\n                type=\\\"submit\\\" value=\\\"+\\\" class=\\\"btn btn-info btn-block\\\">\\n            </div>\\n\\n          </form>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup ,FormControl} from '@angular/forms';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  todo;\n  id;\n  editForm : FormGroup;\n  constructor(private authService: AuthService, private activatedRoute: ActivatedRoute) {\n    this.editForm = new FormGroup({\n      input_value: new FormControl('')\n    \n    });\n    this.activatedRoute.params.subscribe(params => {\n      console.log(params);\n    });\n  }\n\n  ngOnInit() {\n    const index = this.activatedRoute.snapshot.params.index;\n\n\n    const connectedUser = this.authService.connectedUser;\n    this.authService.getById(connectedUser._id).subscribe((data: any) => {\n    \n    this.todo=data.todos[index];\n    console.log(this.todo)\n    })\n    // const users = JSON.parse(localStorage.getItem('users'));\n\n    // for (let i = 0; i < users.length; i++) {\n    //   if (users[i].email === connectedUser.email) {\n    //     this.todo = users[i].todos[index];\n    //     console.log(this.todo);\n\n    //   }\n    // }\n\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <label for=\\\"uname\\\"><b>name</b></label>\\n  <input type=\\\"text\\\" placeholder=\\\"Enter Username\\\" ng-model=\\\"textValue\\\" #textbox><button (click)=\\\"onClick(textbox.value,textbox2.value)\\\">+</button>\\n  <div>\\n    <label for=\\\"uname\\\"><b>Value</b></label>\\n    <input type=\\\"text\\\" placeholder=\\\" \\\" ng-model=\\\"textValue2\\\" #textbox2>\\n    <input #r3 type=\\\"checkbox\\\" name=\\\"r\\\" value=\\\"\\\">\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  \n    \n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<link href=\\\"assets/bootsrap/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\">\\n<script src=\\\"assets/bootsrap/bootstrap.min.js\\\"></script>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row centered-form\\\">\\n    <div class=\\\"col-xs-12 col-sm-8 col-md-4 col-sm-offset-2 col-md-offset-4\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">login Form </h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=loginUser(loginForm)>\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"Email\\\" class=\\\"form-control input-sm\\\"\\n                placeholder=\\\"Email Address\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"password\\\" formControlName=\\\"Password\\\" name=\\\"password\\\" id=\\\"Password\\\" class=\\\"form-control input-sm\\\"\\n                placeholder=\\\"Password\\\">\\n            </div>\\n            <input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-info btn-block\\\">\\n\\n          </form>\\n          <h6>    {{message}}</h6>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  message: String;\n  connectedUser;\n  constructor(private router: Router, private authService: AuthService) {\n    this.loginForm = new FormGroup({\n      Email: new FormControl(''),\n      Password: new FormControl('')\n    });\n  }\n  ngOnInit() {\n    const connected = localStorage.getItem('connectedUser');\n\n    if (connected) {\n      this.router.navigateByUrl('/todos');\n    } else {\n      this.router.navigateByUrl('/login');\n    }\n  }\n  loginUser(loginForm) {\n    this.authService.checkLogin(loginForm.value).subscribe((data: any) => {\n      console.log(data)\n      this.connectedUser = data\n      console.log(this.connectedUser)\n      console.log('connected user ', this.connectedUser);\n      if (data._id) {\n        this.router.navigateByUrl('/todos');\n        localStorage.setItem('connectedUser', JSON.stringify(data));\n      } else {\n        this.message = data.message;\n      }\n\n    });\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n      <img src=\\\"http://placehold.it/300x60?text=Logo\\\" width=\\\"150\\\" height=\\\"30\\\" alt=\\\"\\\">\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item \\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\"  routerLinkActive=\\\"active-link\\\">Home\\n            <span class=\\\"sr-only\\\">(current)</span>\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\"  routerLinkActive=\\\"active-link\\\">login</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\"  routerLinkActive=\\\"active-link\\\">register</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/currency\\\">Currency</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<link href=\\\"assets/bootsrap/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\">\\n<script src=\\\"assets/bootsrap/bootstrap.min.js\\\"></script>\\n\\n<br>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row centered-form\\\">\\n        <div class=\\\"col-xs-12 col-sm-8 col-md-4 col-sm-offset-2 col-md-offset-4\\\">\\n            <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">Register Form </h3>\\n                </div>\\n                <div class=\\\"panel-body\\\">\\n                    <form role=\\\"form\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(registerForm)\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xs-6 col-sm-6 col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"text\\\" name=\\\"first_name\\\" formControlName=\\\"name\\\" id=\\\"first_name\\\" class=\\\"form-control input-sm\\\"\\n                                        placeholder=\\\"First Name\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-xs-6 col-sm-6 col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"text\\\" name=\\\"last_name\\\" formControlName=\\\"lastName\\\" id=\\\"last_name\\\" class=\\\"form-control input-sm\\\"\\n                                        placeholder=\\\"Last Name\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"Email\\\" class=\\\"form-control input-sm\\\"\\n                                placeholder=\\\"Email Address\\\">\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"password\\\" formControlName=\\\"Password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control input-sm\\\"\\n                                        placeholder=\\\"Password\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-info btn-block\\\">\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  // name: FormControl;\n  // lastName: FormControl;\n  // email: FormControl;\n  // pwd: FormControl;\n  users: Array<User> = new Array<User>();\n  registerForm: FormGroup;\n\n  constructor(private router: Router, private authService: AuthService) {\n    this.registerForm = new FormGroup({\n      name: new FormControl(''),\n      lastName: new FormControl(''),\n      Email: new FormControl('', [Validators.email, Validators.required]),\n      Password: new FormControl('')\n    });\n  }\n\n\n  ngOnInit() {\n\n  }\n  register(form) {\n    this.authService.registerUser(form.value).subscribe(data => {\n      console.log(data)\n    });\n  }\n\n  // onClick(name, lname, email, pwd, user): void {\n  // user = { \"name\": name, \"lname\": lname, \"email\": email, \"pwd\": pwd };\n\n\n\n  // let users = localStorage.getItem('users');\n  // if (!users) {\n  // let users = [];\n  //  users.push(user);\n  //  localStorage.setItem('users', JSON.stringify(users));\n  // console.log(\"success\")\n  //  this.router.navigate(['/login']);\n  //   } else {\n  //  users = JSON.parse(users);\n  //  users.push(user);\n  //  localStorage.setItem('users', JSON.stringify(users));\n  // }\n\n  // console.log(user);\n  // localStorage.setItem(\"users\", JSON.stringify(user));\n  // if (Users.length > 0) {\n  //   user.push()\n  // }\n  // localStorage.setItem(\"lname\",user);\n  // localStorage.setItem(\"email\",user);\n  // localStorage.setItem(\"pwd\",user);\n\n  // }\n}\n\nexport class User {\n\n  name: string;\n  lastname: string;\n  email: string;\n  password: string;\n  userId: string;\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG9zL3RvZG9zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<link href=\\\"assets/bootsrap/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\">\\n<script src=\\\"assets/bootsrap/bootstrap.min.js\\\"></script>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row centered-form\\\">\\n    <div class=\\\"col-xs-12 col-sm-8 col-md-4 col-sm-offset-2 col-md-offset-4\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">login Form </h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n\\n          <form [formGroup]=\\\"todosForm\\\" (ngSubmit)=getValue(todosForm)>\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" formControlName=\\\"input_value\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Enter your email\\\"><input\\n                type=\\\"submit\\\" value=\\\"+\\\" class=\\\"btn btn-info btn-block\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" formControlName=\\\"input_value2\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Password\\\">\\n            </div>\\n\\n\\n          </form>\\n\\n\\n          <ul>\\n\\n            <li *ngFor=\\\"let todo of todos; let i = index\\\">\\n                <a routerLink=\\\"/edit/{{i}}\\\">   title: {{todo.title}} - date: {{todo.date | date:'shortTime'}}</a>\\n            </li>\\n\\n          </ul>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent implements OnInit {\n  todosForm: FormGroup;\n  input1: FormControl;\n  input2: FormControl;\n  formatdate = 'dd/MM/yyyy';\n  todos = [];\n  constructor(private authService: AuthService) {\n    this.todosForm = new FormGroup({\n      input_value: new FormControl(''),\n      input_value2: new FormControl('')\n    });\n  }\n\n  ngOnInit() {\n    const connectedUser = JSON.parse(localStorage.getItem('connectedUser'));\n\n    this.authService.getUser(connectedUser._id).subscribe((data: any) => {\n      if (data.todos) {\n        this.todos = data.todos;\n      }\n    })\n\n    // const users = JSON.parse(localStorage.getItem('users'));\n\n    //  for (let i = 0; i < users.length; i++) {\n    // if (users[i].email === connectedUser.email) {\n    //      this.todos = users[i].todos\n\n    //   }\n    // }\n\n  }\n  getValue(todosForm) {\n    console.log(todosForm.value);\n    if (todosForm.value.input_value !== '') {\n\n      const todo = { title: todosForm.value.input_value, date: Date.now(), Done: false };\n\n      this.todos.push(todo);\n\n      const connectedUser = this.authService.connectedUser;\n\n      connectedUser['todos'] = this.todos;\n\n      // api update\n\n      this.authService.updateUser(connectedUser, connectedUser._id).subscribe(data => {\n        console.log(data);\n      })\n\n      // const users = JSON.parse(localStorage.getItem('users'));\n\n      // for (let i = 0; i < users.length; i++) {\n      //   if (users[i].email === connectedUser.email) {\n      //     users[i] = connectedUser;\n      //   }\n      // }\n\n      // localStorage.setItem('users', JSON.stringify(users));\n\n      // todosForm.value.input_value2 = todosForm.value.input_value;\n      // this.input1 = todosForm.value.input_value;\n\n\n      // const now = Date.now();\n      // console.log(this.myFormattedDate);\n\n      // this.input2 = todosForm.value.input_value2 + now;\n\n      // this.todosForm.setValue({ input_value: this.input1, input_value2: this.input2 });\n      // console.log(new Date().toISOString());\n    }\n  }\n  \n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyD-_vQHFwsIRjvtxbxYexfQxTIBhYfhJxQ\",\n    authDomain: \"omega-dryad-152421.firebaseapp.com\",\n    databaseURL: \"https://omega-dryad-152421.firebaseio.com\",\n    projectId: \"omega-dryad-152421\",\n    storageBucket: \"omega-dryad-152421.appspot.com\",\n    messagingSenderId: \"902114063812\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}